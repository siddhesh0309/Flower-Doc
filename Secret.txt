import os, time
from typing import Optional
from google.cloud import secretmanager

# simple TTL cache to avoid hitting SM on every call
_TTL = int(os.getenv("SECRETS_TTL_SECONDS", "600"))
_cache: dict[str, tuple[float, str]] = {}

def _project_id(explicit: Optional[str] = None) -> str:
    return explicit or os.getenv("GOOGLE_CLOUD_PROJECT") or os.getenv("GCP_PROJECT") or ""

def read_secret(project_id: Optional[str], name: str) -> str:
    global _cache
    k = f"{_project_id(project_id)}:{name}"
    now = time.time()
    if k in _cache and now - _cache[k][0] < _TTL:
        return _cache[k][1]

    client = secretmanager.SecretManagerServiceClient()
    res = client.access_secret_version(request={
        "name": f"projects/{_project_id(project_id)}/secrets/{name}/versions/latest"
    })
    val = res.payload.data.decode("utf-8")
    _cache[k] = (now, val)
    return val
